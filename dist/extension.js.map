{"version":3,"file":"extension.js","mappings":"uuBAOA,oBAAyBA,GACvB,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,6BAA6BC,UAC5E,MAAMC,EAASJ,EAAOK,OAAOC,iBAC7B,GAAIF,EAAQ,CACV,MAAMG,EAAWH,EAAOG,SAKlBC,EAAe,SAJAC,EAAKC,SAASV,EAAOW,UAAUC,UAAY,GAAIL,EAASM,IAAIC,mBAChEP,EAASQ,kBAMpBf,EAAOgB,IAAIC,UAAUC,UAAUV,GACrCR,EAAOK,OAAOc,uBAAuB,0CACvC,MACEnB,EAAOK,OAAOe,mBAAmB,0BACnC,IAGFtB,EAAQuB,cAAcC,KAAKvB,EAC7B,EAGA,wBAA8B,EA5B9B,kBACA,W,UCHAwB,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://CodeCopy/./src/extension.ts","webpack://CodeCopy/external commonjs \"vscode\"","webpack://CodeCopy/external node-commonjs \"path\"","webpack://CodeCopy/webpack/bootstrap","webpack://CodeCopy/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport * as path from \"path\";\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand(\"extension.copyPathAndCode\", async () => {\n    const editor = vscode.window.activeTextEditor;\n    if (editor) {\n      const document = editor.document;\n      const relativePath = path.relative(vscode.workspace.rootPath || \"\", document.uri.fsPath);\n      const fileCode = document.getText();\n\n      // Combine the path and code\n      const combinedText = `Path: ${relativePath}\\nCode:\\n${fileCode}`;\n\n      // Copy to clipboard\n      await vscode.env.clipboard.writeText(combinedText);\n      vscode.window.showInformationMessage(\"File path and code copied to clipboard!\");\n    } else {\n      vscode.window.showWarningMessage(\"No active editor found.\");\n    }\n  });\n\n  context.subscriptions.push(disposable);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","async","editor","window","activeTextEditor","document","combinedText","path","relative","workspace","rootPath","uri","fsPath","getText","env","clipboard","writeText","showInformationMessage","showWarningMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}